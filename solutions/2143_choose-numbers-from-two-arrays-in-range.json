{
    "problemName": "choose-numbers-from-two-arrays-in-range",
    "language": "cpp",
    "code": "class  Solution  {   public :   int  countSubranges ( vector < int >&  nums1 ,  vector < int >&  nums2 )  {   constexpr  int  kMod  =  1'000'000'007 ;   int  ans  =  0 ;     unordered_map < int ,  int >  dp ;   for  ( int  i  =  0 ;  i  <  nums1 . size ();  ++ i )  {       unordered_map < int ,  int >  newDp ;   ++ newDp [ nums1 [ i ]];   ++ newDp [ - nums2 [ i ]];   for  ( const  auto &  [ prevSum ,  count ]  :  dp )  {     newDp [ prevSum  +  nums1 [ i ]]  +=  count ;   newDp [ prevSum  +  nums1 [ i ]]  %=  kMod ;     newDp [ prevSum  -  nums2 [ i ]]  +=  count ;   newDp [ prevSum  -  nums2 [ i ]]  %=  kMod ;   }   dp  =  move ( newDp );   if  ( const  auto  it  =  dp . find ( 0 );  it  !=  dp . cend ())  {   ans  +=  it -> second ;   ans  %=  kMod ;   }   }   return  ans ;   }  }; "
}