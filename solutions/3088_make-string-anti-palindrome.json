{
    "problemName": "make-string-anti-palindrome",
    "language": "cpp",
    "code": "class  Solution  {   public :   string  makeAntiPalindrome ( string  s )  {   const  int  n  =  s . length ();   int  i  =  n  /  2 ;   ranges :: sort ( s );   if  ( s [ i ]  !=  s [ n  -  i  -  1 ])   return  s ;   int  j  =  getFirstDiffIndexInSecondHalf ( s );   while  ( s [ i ]  ==  s [ n  -  i  -  1 ])  {   if  ( j  ==  n )   return  \"-1\" ;   swap ( s [ i ++ ],  s [ j ++ ]);   }   return  s ;   }   private :       int  getFirstDiffIndexInSecondHalf ( const  string &  s )  {   const  int  n  =  s . size ();   const  char  firstLetter  =  s [ n  /  2 ];   int  firstDiffIndex  =  n  /  2 ;   while  ( firstDiffIndex  <  n  &&  s [ firstDiffIndex ]  ==  firstLetter )   ++ firstDiffIndex ;   return  firstDiffIndex ;   }  }; "
}