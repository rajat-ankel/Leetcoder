{
    "problemName": "maximum-of-minimum-values-in-all-subarrays",
    "language": "cpp",
    "code": "class  Solution  {   public :     vector < int >  findMaximums ( vector < int >&  nums )  {   const  int  n  =  nums . size ();   vector < int >  ans ( n );       vector < int >  prevMin ( n ,  -1 );       vector < int >  nextMin ( n ,  n );   stack < int >  stack ;   for  ( int  i  =  0 ;  i  <  n ;  ++ i )  {   while  ( ! stack . empty ()  &&  nums [ stack . top ()]  >  nums [ i ])  {   const  int  index  =  stack . top ();   stack . pop ();   nextMin [ index ]  =  i ;   }   if  ( ! stack . empty ())   prevMin [ i ]  =  stack . top ();   stack . push ( i );   }         for  ( int  i  =  0 ;  i  <  n ;  ++ i )  {   const  int  sz  =  nextMin [ i ]  -  prevMin [ i ]  -  1 ;   ans [ sz  -  1 ]  =  max ( ans [ sz  -  1 ],  nums [ i ]);   }     for  ( int  i  =  n  -  2 ;  i  >=  0 ;  -- i )   ans [ i ]  =  max ( ans [ i ],  ans [ i  +  1 ]);   return  ans ;   }  }; "
}