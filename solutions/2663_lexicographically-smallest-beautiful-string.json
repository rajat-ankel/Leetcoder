{
    "problemName": "lexicographically-smallest-beautiful-string",
    "language": "cpp",
    "code": "class  Solution  {   public :   string  smallestBeautifulString ( string  s ,  int  k )  {   for  ( int  i  =  s . length ()  -  1 ;  i  >=  0 ;  -- i )  {   do  {   ++ s [ i ];   }  while  ( containsPalindrome ( s ,  i ));   if  ( s [ i ]  <  'a'  +  k )       return  changeSuffix ( s ,  i  +  1 );   }   return  \"\" ;   }   private :     bool  containsPalindrome ( const  string &  s ,  int  i )  {   return  ( i  >  0  &&  s [ i ]  ==  s [ i  -  1 ])  ||  ( i  >  1  &&  s [ i ]  ==  s [ i  -  2 ]);   }       string  changeSuffix ( string &  s ,  int  i )  {   for  ( int  j  =  i ;  j  <  s . length ();  ++ j )   for  ( s [ j ]  =  'a' ;  containsPalindrome ( s ,  j );  ++ s [ j ])   ;   return  s ;   }  }; "
}