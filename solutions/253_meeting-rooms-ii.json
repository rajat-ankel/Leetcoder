{
    "problemName": "meeting-rooms-ii",
    "language": "cpp",
    "code": "class  Solution  {   public :   int  minMeetingRooms ( vector < vector < int >>&  intervals )  {   ranges :: sort ( intervals );     priority_queue < int ,  vector < int > ,  greater <>>  minHeap ;   for  ( const  vector < int >&  interval  :  intervals )  {     if  ( ! minHeap . empty ()  &&  interval [ 0 ]  >=  minHeap . top ())   minHeap . pop ();   minHeap . push ( interval [ 1 ]);   }   return  minHeap . size ();   }  }; "
}