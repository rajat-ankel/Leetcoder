{
    "problemName": "maximum-subarray-sum-with-one-deletion",
    "language": "cpp",
    "code": "class  Solution  {   public :     int  maximumSum ( vector < int >&  arr )  {       vector < vector < int >>  dp ( 2 ,  vector < int > ( arr . size ()));   dp [ 0 ][ 0 ]  =  arr [ 0 ];   dp [ 1 ][ 0 ]  =  arr [ 0 ];   for  ( int  i  =  1 ;  i  <  arr . size ();  ++ i )  {   dp [ 0 ][ i ]  =  max ( arr [ i ],  dp [ 0 ][ i  -  1 ]  +  arr [ i ]);   dp [ 1 ][ i ]  =   max ({ arr [ i ],  dp [ 1 ][ i  -  1 ]  +  arr [ i ],  dp [ 0 ][ i  -  1 ]  /*delete arr[i]*/ });   }   return  ranges :: max ( dp [ 1 ]);   }  }; "
}