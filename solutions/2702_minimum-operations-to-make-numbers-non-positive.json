{
    "problemName": "minimum-operations-to-make-numbers-non-positive",
    "language": "cpp",
    "code": "class  Solution  {   public :   int  minOperations ( vector < int >&  nums ,  int  x ,  int  y )  {   int  l  =  0 ;   int  r  =  ranges :: max ( nums );   while  ( l  <  r )  {   const  int  m  =  ( l  +  r )  /  2 ;   if  ( isPossible ( nums ,  x ,  y ,  m ))   r  =  m ;   else   l  =  m  +  1 ;   }   return  l ;   }   private :     bool  isPossible ( const  vector < int >&  nums ,  int  x ,  int  y ,  int  m )  {   long  additionalOps  =  0 ;       for  ( const  int  num  :  nums )   additionalOps  +=   max ( 0L ,  ( num  -  static_cast < long > ( y )  *  m  +  x  -  y  -  1 )  /  ( x  -  y ));   return  additionalOps  <=  m ;   }  }; "
}