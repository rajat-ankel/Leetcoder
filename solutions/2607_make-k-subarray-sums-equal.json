{
    "problemName": "make-k-subarray-sums-equal",
    "language": "cpp",
    "code": "class  Solution  {   public :   long  long  makeSubKSumEqual ( vector < int >&  arr ,  int  k )  {           const  int  n  =  arr . size ();   long  ans  =  0 ;   vector < bool >  seen ( n );   for  ( int  i  =  0 ;  i  <  n ;  ++ i )  {   vector < int >  groups ;   int  j  =  i ;   while  ( ! seen [ j ])  {   groups . push_back ( arr [ j ]);   seen [ j ]  =  true ;   j  =  ( j  +  k )  %  n ;   }   nth_element ( groups . begin (),  groups . begin ()  +  groups . size ()  /  2 ,   groups . end ());   for  ( const  int  num  :  groups )   ans  +=  abs ( num  -  groups [ groups . size ()  /  2 ]);   }   return  ans ;   }  }; "
}