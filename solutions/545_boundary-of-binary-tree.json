{
    "problemName": "boundary-of-binary-tree",
    "language": "cpp",
    "code": "class  Solution  {   public :   vector < int >  boundaryOfBinaryTree ( TreeNode *  root )  {   if  ( root  ==  nullptr )   return  {};   vector < int >  ans { root -> val };   dfs ( root -> left ,  true ,  false ,  ans );   dfs ( root -> right ,  false ,  true ,  ans );   return  ans ;   }   private :               void  dfs ( TreeNode *  root ,  bool  lb ,  bool  rb ,  vector < int >&  ans )  {   if  ( root  ==  nullptr )   return ;   if  ( lb )   ans . push_back ( root -> val );   if  ( ! lb  &&  ! rb  &&  root -> left  ==  nullptr  &&  root -> right  !=  nullptr )   ans . push_back ( root -> val );   dfs ( root -> left ,  lb ,  rb  &&  root -> right  ==  nullptr ,  ans );   dfs ( root -> right ,  lb  &&  root -> left  ==  nullptr ,  rb ,  ans );   if  ( rb )   ans . push_back ( root -> val );   }  }; "
}