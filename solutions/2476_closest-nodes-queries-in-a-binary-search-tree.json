{
    "problemName": "closest-nodes-queries-in-a-binary-search-tree",
    "language": "cpp",
    "code": "class  Solution  {   public :   vector < vector < int >>  closestNodes ( TreeNode *  root ,  vector < int >&  queries )  {   vector < vector < int >>  ans ;   vector < int >  sortedVals ;   inorder ( root ,  sortedVals );   for  ( const  int  query  :  queries )  {   const  auto  it  =  ranges :: lower_bound ( sortedVals ,  query );     if  ( it  !=  sortedVals . cend ()  &&  * it  ==  query )   ans . push_back ({ query ,  query });     else   ans . push_back ({ it  ==  sortedVals . cbegin ()  ?  -1  :  * prev ( it ),   it  ==  sortedVals . cend ()  ?  -1  :  * it });   }   return  ans ;   }   private :     void  inorder ( TreeNode *  root ,  vector < int >&  sortedVals )  {   if  ( root  ==  nullptr )   return ;   inorder ( root -> left ,  sortedVals );   sortedVals . push_back ( root -> val );   inorder ( root -> right ,  sortedVals );   }  }; "
}