{
    "problemName": "count-the-number-of-k-free-subsets",
    "language": "cpp",
    "code": "class  Solution  {   public :     long  long  countTheNumOfKFreeSubsets ( vector < int >&  nums ,  int  k )  {   unordered_map < int ,  set < int >>  modToSubset ;   for  ( const  int  num  :  nums )   modToSubset [ num  %  k ]. insert ( num );   int  prevNum  =  - k ;   long  skip  =  0 ;   long  pick  =  0 ;   for  ( const  auto &  [ _ ,  subset ]  :  modToSubset )   for  ( const  int  num  :  subset )  {   const  long  cacheSkip  =  skip ;   skip  +=  pick ;   pick  =  1  +  cacheSkip  +  ( num  -  prevNum  ==  k  ?  0  :  pick );   prevNum  =  num ;   }   return  1  +  skip  +  pick ;   }  }; "
}