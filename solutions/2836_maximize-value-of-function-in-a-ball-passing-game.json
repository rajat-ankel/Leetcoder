{
    "problemName": "maximize-value-of-function-in-a-ball-passing-game",
    "language": "cpp",
    "code": "class  Solution  {   public :   long  long  getMaxFunctionValue ( vector < int >&  receiver ,  long  long  k )  {   const  int  n  =  receiver . size ();   const  int  m  =  log2 ( k )  +  1 ;   long  ans  =  0 ;     vector < vector < int >>  jump ( n ,  vector < int > ( m ));     vector < vector < long >>  sum ( n ,  vector < long > ( m ));   for  ( int  i  =  0 ;  i  <  n ;  ++ i )  {   jump [ i ][ 0 ]  =  receiver [ i ];   sum [ i ][ 0 ]  =  receiver [ i ];   }     for  ( int  j  =  1 ;  j  <  m ;  ++ j )   for  ( int  i  =  0 ;  i  <  n ;  ++ i )  {   const  int  midNode  =  jump [ i ][ j  -  1 ];         jump [ i ][ j ]  =  jump [ midNode ][ j  -  1 ];         sum [ i ][ j ]  =  sum [ i ][ j  -  1 ]  +  sum [ midNode ][ j  -  1 ];   }   for  ( int  i  =  0 ;  i  <  n ;  ++ i )  {   long  currSum  =  i ;   int  currPos  =  i ;   for  ( int  j  =  0 ;  j  <  m ;  ++ j )   if  ( k  >>  j  &  1 )  {   currSum  +=  sum [ currPos ][ j ];   currPos  =  jump [ currPos ][ j ];   }   ans  =  max ( ans ,  currSum );   }   return  ans ;   }  }; "
}