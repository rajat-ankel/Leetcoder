{
    "problemName": "longest-substring-with-at-least-k-repeating-characters",
    "language": "cpp",
    "code": "class  Solution  {   public :   int  longestSubstring ( string  s ,  int  k )  {   int  ans  =  0 ;   for  ( int  n  =  1 ;  n  <=  26 ;  ++ n )   ans  =  max ( ans ,  longestSubstringWithNUniqueLetters ( s ,  k ,  n ));   return  ans ;   }   private :   int  longestSubstringWithNUniqueLetters ( const  string &  s ,  int  k ,  int  n )  {   int  res  =  0 ;   int  uniqueLetters  =  0 ;    int  lettersHavingKFreq  =  0 ;    vector < int >  count ( 26 );   for  ( int  l  =  0 ,  r  =  0 ;  r  <  s . length ();  ++ r )  {   if  ( ++ count [ s [ r ]  -  'a' ]  ==  1 )   ++ uniqueLetters ;   if  ( count [ s [ r ]  -  'a' ]  ==  k )   ++ lettersHavingKFreq ;   while  ( uniqueLetters  >  n )  {   if  ( count [ s [ l ]  -  'a' ]  ==  k )   -- lettersHavingKFreq ;   if  ( -- count [ s [ l ]  -  'a' ]  ==  0 )   -- uniqueLetters ;   ++ l ;   }       if  ( lettersHavingKFreq  ==  n )    res  =  max ( res ,  r  -  l  +  1 );   }   return  res ;   }  }; "
}