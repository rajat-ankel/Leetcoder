{
    "problemName": "find-beautiful-indices-in-the-given-array-i",
    "language": "cpp",
    "code": "class  Solution  {   public :   vector < int >  beautifulIndices ( string  s ,  string  a ,  string  b ,  int  k )  {   vector < int >  ans ;   const  vector < int >  indicesA  =  kmp ( s ,  a );   const  vector < int >  indicesB  =  kmp ( s ,  b );   int  indicesBIndex  =  0 ;    for  ( const  int  i  :  indicesA )  {       while  ( indicesBIndex  <  indicesB . size ()  &&   indicesB [ indicesBIndex ]  -  i  <  - k )   ++ indicesBIndex ;   if  ( indicesBIndex  <  indicesB . size ()  &&  indicesB [ indicesBIndex ]  -  i  <=  k )   ans . push_back ( i );   }   return  ans ;   }   private :     vector < int >  kmp ( const  string &  s ,  const  string &  pattern )  {   vector < int >  res ;   const  vector < int >  lps  =  getLPS ( pattern );   int  i  =  0 ;    int  j  =  0 ;    while  ( i  <  s . length ())  {   if  ( s [ i ]  ==  pattern [ j ])  {   ++ i ;   ++ j ;   if  ( j  ==  pattern . length ())  {   res . push_back ( i  -  j );   j  =  lps [ j  -  1 ];   }   }     else  if  ( j  >  0 )  {     j  =  lps [ j  -  1 ];   }  else  {   ++ i ;   }   }   return  res ;   }       vector < int >  getLPS ( const  string &  pattern )  {   vector < int >  lps ( pattern . length ());   for  ( int  i  =  1 ,  j  =  0 ;  i  <  pattern . length ();  ++ i )  {   while  ( j  >  0  &&  pattern [ j ]  !=  pattern [ i ])   j  =  lps [ j  -  1 ];   if  ( pattern [ i ]  ==  pattern [ j ])   lps [ i ]  =  ++ j ;   }   return  lps ;   }  }; "
}