{
    "problemName": "minimum-cost-to-change-the-final-value-of-expression",
    "language": "cpp",
    "code": "class  Solution  {   public :   int  minOperationsToFlip ( string  expression )  {     stack < pair < char ,  int >>  stack ;   pair < char ,  int >  lastPair ;   for  ( const  char  e  :  expression )  {   if  ( e  ==  '('  ||  e  ==  '&'  ||  e  ==  '|' )  {     stack . push ({ e ,  0 });   continue ;   }   if  ( e  ==  ')' )  {   lastPair  =  stack . top ();   stack . pop ();   stack . pop ();    }  else  {        lastPair  =  { e ,  1 };   }   if  ( ! stack . empty ()  &&   ( stack . top (). first  ==  '&'  ||  stack . top (). first  ==  '|' ))  {   const  char  op  =  stack . top (). first ;   stack . pop ();   const  auto  [ a ,  costA ]  =  stack . top ();   stack . pop ();   const  auto  [ b ,  costB ]  =  lastPair ;     if  ( op  ==  '&' )  {   if  ( a  ==  '0'  &&  b  ==  '0' )     lastPair  =  { '0' ,  1  +  min ( costA ,  costB )};   else  if  ( a  ==  '0'  &&  b  ==  '1' )     lastPair  =  { '0' ,  1 };   else  if  ( a  ==  '1'  &&  b  ==  '0' )     lastPair  =  { '0' ,  1 };   else      lastPair  =  { '1' ,  min ( costA ,  costB )};   }  else  {    if  ( a  ==  '0'  &&  b  ==  '0' )     lastPair  =  { '0' ,  min ( costA ,  costB )};   else  if  ( a  ==  '0'  &&  b  ==  '1' )     lastPair  =  { '1' ,  1 };   else  if  ( a  ==  '1'  &&  b  ==  '0' )     lastPair  =  { '1' ,  1 };   else      lastPair  =  { '1' ,  1  +  min ( costA ,  costB )};   }   }   stack . push ( lastPair );   }   return  stack . top (). second ;   }  }; "
}