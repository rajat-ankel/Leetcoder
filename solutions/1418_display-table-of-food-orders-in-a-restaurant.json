{
    "problemName": "display-table-of-food-orders-in-a-restaurant",
    "language": "cpp",
    "code": "class  Solution  {   public :   vector < vector < string >>  displayTable ( vector < vector < string >>&  orders )  {   vector < vector < string >>  ans {{ \"Table\" }};   unordered_map < string ,  int >  tableNumberToRowIndex ;   unordered_map < string ,  int >  foodItemToColIndex ;     for  ( const  vector < string >&  order  :  orders )  {   const  string &  tableNumber  =  order [ 1 ];   const  string &  foodItem  =  order [ 2 ];     tableNumberToRowIndex [ tableNumber ]  =  0 ;   foodItemToColIndex [ foodItem ]  =  0 ;   }   for  ( const  auto &  [ tableNumber ,  _ ]  :  tableNumberToRowIndex )   ans . push_back ({ tableNumber });   for  ( const  auto &  [ foodItem ,  _ ]  :  foodItemToColIndex )   ans [ 0 ]. push_back ( foodItem );     sort ( ans [ 0 ]. begin ()  +  1 ,  ans [ 0 ]. end ());   sort ( ans . begin ()  +  1 ,  ans . end (),   []( const  vector < string >&  a ,  const  vector < string >&  b )  {   return  stoi ( a [ 0 ])  <  stoi ( b [ 0 ]);   });     for  ( int  i  =  0 ;  i  <  tableNumberToRowIndex . size ();  ++ i )   tableNumberToRowIndex [ ans [ i  +  1 ][ 0 ]]  =  i ;   for  ( int  i  =  0 ;  i  <  foodItemToColIndex . size ();  ++ i )   foodItemToColIndex [ ans [ 0 ][ i  +  1 ]]  =  i ;     vector < vector < int >>  count ;   for  ( int  i  =  0 ;  i  <  tableNumberToRowIndex . size ();  ++ i )   count . push_back ( vector < int > ( foodItemToColIndex . size ()));   for  ( const  vector < string >&  order  :  orders )  {   const  string &  tableNumber  =  order [ 1 ];   const  string &  foodItem  =  order [ 2 ];   const  int  rowIndex  =  tableNumberToRowIndex [ tableNumber ];   const  int  colIndex  =  foodItemToColIndex [ foodItem ];   ++ count [ rowIndex ][ colIndex ];   }     for  ( int  i  =  0 ;  i  <  tableNumberToRowIndex . size ();  ++ i )   for  ( int  j  =  0 ;  j  <  foodItemToColIndex . size ();  ++ j )   ans [ i  +  1 ]. push_back ( to_string ( count [ i ][ j ]));   return  ans ;   }  }; "
}